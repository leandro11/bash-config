
if [[ $(uname -s) == "Darwin" ]]; then
	alias my="mysql.server start"
	alias down="cd ~/Downloads"
	alias doc="cd ~/Documents"
	alias work="cd ~/Workspace"
fi

if [[ $(uname -s) == "Linux" ]]; then
	alias ngx="service nginx restart"
fi

# for project folder
alias work="cd ~/Workspace"
alias butterfly="cd ~/Workspace/butterfly"
alias android="cd ~/Workspace/AndroidStudioProjects"
alias oz="cd ~/Workspace/ozsales"
alias per="cd ~/Workspace/persimmon"
alias om="cd ~/Workspace/omnimw"
alias bashconfig="cd ~/bash-config/"
alias aimeipin="cd ~/Workspace/aimeipin"
alias sms="cd ~/Workspace/AndroidStudioProjects/SMSRedirector"
alias taobao="cd ~/Workspace/taobao"
alias quax='cd ~/Workspace/butterfly/quax'
alias quaxcms='cd ~/Workspace/butterfly/quax/quax-cms'


# for ssh
alias luotao="ssh root@luotao"
alias luotao.sz="ssh root@luotao.sz"
alias aimeipin.cc="ssh root@aimeipin"
alias oz.sz.restart="ssh root@luotao.sz 'cd /opt/ozsales && ./script.sh restart'"
alias oz.restart="ssh root@luotao 'cd /opt/ozsales && ./script.sh restart'"

# for dev
alias ac="source ./env/bin/activate"
alias de="deactivate"

# for django
alias djtest="python manage.py test --noinput --nologcapture -s "
alias shell_plus="python manage.py shell_plus"
alias migrate="python manage.py migrate"
alias makemigrations="python manage.py makemigrations"
alias showmigrations="python manage.py showmigrations"
alias showmi="python manage.py showmigrations"
alias code="python manage.py code"
alias collectstatic="python manage.py collectstatic --noinput"
alias manage="python manage.py "

# for OS
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias ls='ls $LS_OPTIONS -A'
alias ll='ls $LS_OPTIONS -lAFh'
alias l='ls $LS_OPTIONS -lAh'
alias la='ls -A'
alias aliases='. ~/.bash_aliases'
alias ~="cd ~"
alias cd..='cd ../'
alias ..='cd ../'
alias ...='cd ../../'
alias mkdir='mkdir -pv'
alias which='type -all'    # which:        Find executables
alias path='echo -e ${PATH//:/\\n}' 
alias qfind="find . -name "

# find text in all files under current folder
alias findf="find . -type f | xargs grep -s -R -n "

# for git, add tag and push (overwrite existed)
gittag() {
	if [ -z "$1" ]; then
		echo "Please input tag name."
		exit 0
	fi

	TAGNAME=$1
	git tag -d $TAGNAME
	git push origin :refs/tags/$TAGNAME
	git push origin HEAD
  if [ -z "$2" ]; then
    git tag -a $TAGNAME
  else
    git tag -a $TAGNAME -m "$2"
  fi
	git push origin --tags
}

#   extract:  Extract most know archives with one command
#   ---------------------------------------------------------
    extract () {
        if [ -f $1 ] ; then
          case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted via extract()" ;;
             esac
         else
             echo "'$1' is not a valid file"
         fi
    }

